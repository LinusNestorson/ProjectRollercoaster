@page "/podcastpage"
@inject IPodcastService PodcastService

<header>
<h3>PodcastPage</h3>
</header>

    @if (spinner == true)
{
        <div style="position:absolute; top:30vh; width:auto; text-align:center; margin-left: 35vw">
            <i style="color: orange; font-size: 4em;" class="fas fa-spin fa-rss-square"></i> <br /> <br /> <p style="font-size: 2.5em;">Fetching Podcasts...</p>
        </div>
}

@if (spinner == false)
{

    <div class="podcastGrid">
        @foreach (var podcast in PodcastService.Podcasts)
        {

            <iframe style="border-radius:12px" src=@podcast.Url width="60%" margin-left="15%" height="232" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture"></iframe>

        }
    </div>
}


@code {
        /// <summary>
    /// Determines if loading spinner should be shown or not
    /// </summary>
    private bool spinner = false;

    /// <summary>
    /// Method that runs first when the component is ready to start.
    /// Calls on methods inside services and while these are loading displaying a spinner.
    /// </summary>
    /// <returns>Task representing async operation</returns>
    protected override async Task OnInitializedAsync()
    {
        spinner = true;
        await Task.Delay(1);
        await PodcastService.LoadAllPodcasts();
        await Task.Delay(800);
        spinner = false;
        
    }


}
