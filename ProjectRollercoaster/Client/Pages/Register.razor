@page "/register"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject IToastService ToastService

<div class="registerForm">
        <br />
<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm style="width: 25em;" Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label for="email" class="required">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Email)" />
    </div>
        <br />
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
        <ValidationMessage For="@(() => user.Username)" />
    </div>
        <br />
    <div class="form-group">
        <label for="password" class="required">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.Password)" />
    </div>
        <br />
    <div class="form-group">
        <label for="confirmPassword">Confirm password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"></InputText>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
        <br />
    <div class="form-check">
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input"></InputCheckbox>
                <label for="confirmed" class="form-check-label">Confirmed</label>
        <ValidationMessage For="@(() => user.IsConfirmed)" />
    </div>
        <br />
    <button type="submit" class="btn btn-outline-primary">Register</button>
</EditForm>
</div>


@code {
    UserRegister user = new();

    async void HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if(result.Success)
        {
            ToastService.ShowSuccess(result.Message);
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
    }
}
